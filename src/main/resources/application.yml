spring:
  data.mongodb:
    host: ${MONGODB_HOST}
    username: ${MONGODB_USER}
    password: ${MONGODB_PASSWORD}
    authentication-database: ${MONGODB_AUTH}
    replica-set-name: ${MONGODB_REPLICASET}
    port: 27017
    database: datasetCatalog
    auto-index-creation: true
  security.oauth2.resourceserver.jwt.jwk-set-uri: ${OIDC_JWKS:https://sso.staging.fellesdatakatalog.digdir.no/auth/realms/fdk/protocol/openid-connect/certs}
  rabbitmq:
    host: ${RABBIT_HOST}
    port: 5672
    username: ${RABBIT_USERNAME}
    password: ${RABBIT_PASSWORD}
    template:
      exchange: harvests
server.port: 8080
logging:
  level.root: WARN
  level.no: ${LOG_LEVEL:DEBUG}
  level.org.springframework: WARN
  level.org.springframework.web: WARN
management:
  endpoints:
    web:
      base-path: /
      path-mapping:
        info: ping
        health: ready
      exposure:
        include: health, info, prometheus
  metrics:
    tags:
      application: dataset-catalog
application:
  fdkBaseHost: ${FDK_BASE_HOST:https://staging.fellesdatakatalog.digdir.no}
  organizationCatalogHost: ${ORGANIZATION_CATALOG_HOST:https://organization-catalog.staging.fellesdatakatalog.digdir.no}
  catalogUriHost: ${FDK_REGISTRATION_BASE_URI:https://registrering.staging.fellesdatakatalog.digdir.no}/catalogs
  datasetCatalogUriHost: ${DATASET_CATALOG_URI:https://dataset-catalog.staging.fellesdatakatalog.digdir.no}/catalogs
  harvestDelay: 600000
  catalogHarvestRoute: dataset.publisher.HarvestTrigger
  newDataSourceRoute: dataset.publisher.NewDataSource
  exchangeName: harvests
security:
  fdkIssuer: ${OIDC_ISSUER:https://sso.staging.fellesdatakatalog.digdir.no/auth/realms/fdk}
  corsOriginPatterns: "${CORS_ORIGIN_PATTERNS}"

---
spring:
  config.activate.on-profile: develop
  data.mongodb.uri: mongodb://admin:admin@localhost:27017/datasetCatalog?authSource=admin&authMechanism=SCRAM-SHA-1
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: admin
    password: admin
application:
  fdkBaseHost: https://staging.fellesdatakatalog.digdir.no
  organizationCatalogHost: https://organization-catalog.staging.fellesdatakatalog.digdir.no
  catalogUriHost: https://registrering.staging.fellesdatakatalog.digdir.no/catalogs
  harvestDelay: 10000
  catalogHarvestRoute: dataset.publisher.HarvestTrigger
  newDataSourceRoute: dataset.publisher.NewDataSource
  exchangeName: harvests
security.corsOriginPatterns: "*"

---
spring:
  config.activate.on-profile: contract-test
  security.oauth2.resourceserver.jwt.jwk-set-uri: http://localhost:5050/auth/realms/fdk/protocol/openid-connect/certs
server.port: 5555
application:
  fdkBaseHost: http://localhost:5050
  organizationCatalogHost: http://localhost:5050
  catalogUriHost: http://localhost:5050/catalogs
  harvestDelay: 10000
  catalogHarvestRoute: dataset.publisher.HarvestTrigger
  newDataSourceRoute: dataset.publisher.NewDataSource
  exchangeName: harvests
security.corsOriginPatterns: "*"

---
spring:
  config:
    activate:
      on-profile: dev
  data:
    mongodb:
      host: localhost
      username: root
      password: secret
      authentication-database: admin
      replica-set-name: null
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${SSO_HOST}/auth/realms/fdk
          jwk-set-uri: ${SSO_HOST}/auth/realms/fdk/protocol/openid-connect/certs
          audiences: dataset-catalog
          authorities-claim-name: authorities
          authority-prefix: ""
          authorities-claim-delimiter: ","
  autoconfigure:
    exclude: org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration
  mvc:
    problemdetails:
      enabled: true
application:
  base-uri: ${BASE_URI:http://localhost}
  organization-catalog-base-uri: ${ORGANIZATION_CATALOG_BASE_URI:https://organization-catalog.staging.fellesdatakatalog.digdir.no}
  cors:
    originPatterns: "${CORS_ORIGIN_PATTERNS}"
